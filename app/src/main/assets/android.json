{
  "data": [
    {
      "sr_number": "1",
      "question": "What is Android?",
      "answer": "Android is a stack of software for mobile devices which includes Linux kernel-based Operating System, middleware and some key applications. The application executes within its own process and its own instance of Dalvik Virtual Machine(DVM). DVM executes Java languages byte code which later transforms into .dex format files.\n\nAndy Rubin founded Android Inc in California, United States in October, 2003.\nIn 17th August 2005, Google acquired android Incorporation. Since then, it is in the subsidiary of Google Incorporation."
    },
    {
      "sr_number": "2",
      "question": "What are the advantages of android?",
      "answer": "Open-source: It means no licence, distribution and development fee.\nPlatform-independent: It supports windows, mac and linux platforms.\nSupports various technologies: It supports camera, bluetooth, wifi, speech, EDGE etc. technologies.\nHighly optimized Virtual Machine: Android uses highly optimized virtual machine for mobile devices, called DVM (Dalvik Virtual Machine)."
    },
    {
      "sr_number": "3",
      "question": "What is the Android Architecture?",
      "answer": "Android Architecture is made up of following components.They are as follows,\n\nServices − It will perform background functionalities\n\nIntent − It will perform the inter connection between activities and the data passing mechanism\n\nResource Externalization − strings and graphics\n\nNotification − light,sound,icon,notification,dialog box,and toast\n\nContent Providers − It will share the data between applications"
    },
    {
      "sr_number": "4",
      "question": "Describe the APK format?",
      "answer": "The APK file is compressed of the Android Manifest.xml file, application code (.dex files), resource files, and other files. A project is compiled into a single .apk file."
    },
    {
      "sr_number": "5",
      "question": "What is .apk extension?",
      "answer": "The extension for an Android package file, which typically contains all of the files related to a single Android application. The file itself is a compressed collection of an AndroidManifest.xml file, application code (.dex files), resource files, and other files. A project is compiled into a single .apk file."
    },
    {
      "sr_number": "6",
      "question": "What is .dex extension?",
      "answer": "Android programs are compiled into .dex (Dalvik Executable) files, which are in turn zipped into a single.apk file on the device. .dex files can be created by automatically translating compiled applications written in the Java programming language."
    },
    {
      "sr_number": "7",
      "question": "What are the core building blocks of android?",
      "answer": "Activity, Intent, Service, Content Provider, View, Fragment"
    },
    {
      "sr_number": "8",
      "question": "What is Activity?",
      "answer": "A single screen in an application, with supporting Java code. An activity presents a visual user interface for one focused endeavor the user can undertakeActivity represents the presentation layer of an Android application, e.g. a screen which the user sees. An Android application can have several activities and it can be switched between them during runtime of the application. In short Activity is a page in your application."
    },
    {
      "sr_number": "9",
      "question": "What is Intent?",
      "answer": "Intents are asynchronous messages which allow application components to request functionality from other Android components. Intents allow you to interact with components from the same applications as well as with components contributed by other applications. For example, an activity can start an external activity for taking a picture.\n\nAn intent can contain data via a Bundle. This data can be used by the receiving component."
    },
    {
      "sr_number": "10",
      "question": "What is an explicit Intent?",
      "answer": "Explicit intent is used to invoke the activity class. In other words, we can call another activity in android by explicit intent. "
    },
    {
      "sr_number": "11",
      "question": "What is an implicit Intent? ",
      "answer": "Implicit intent is used to invoke the system components."
    },
    {
      "sr_number": "12",
      "question": "What is An android manifest file?",
      "answer": "Every application must have an AndroidManifest.xml file (with precisely that name) in its root directory. The manifest file presents essential information about your app to the Android system, information the system must have before it can run any of the app's code."
    },
    {
      "sr_number": "13",
      "question": "What is service in android?",
      "answer": "A service doesn’t have a visual user interface, but rather runs in the background for an indefinite period of time.\n\nA Service is an application component that can perform long-running operations in the background, and it does not provide a user interface. Another application component can start a service, and it continues to run in the background even if the user switches to another application."
    },
    {
      "sr_number": "14",
      "question": "What are the types of service?",
      "answer": "These are the three different types of services:\n\n1) Foreground :\n\nA foreground service performs some operation that is noticeable to the user. For example, an audio app would use a foreground service to play an audio track. Foreground services must display a status bar icon. Foreground services continue running even when the user isn't interacting with the app.\n\n2) Background :\n\nA background service performs an operation that isn't directly noticed by the user. For example, if an app used a service to compact its storage, that would usually be a background service.\n\n3) Bound :\n\nA service is bound when an application component binds to it by calling bindService(). A bound service offers a client-server interface that allows components to interact with the service, send requests, receive results, and even do so across processes with interprocess communication (IPC). A bound service runs only as long as another application component is bound to it. Multiple components can bind to the service at once, but when all of them unbind, the service is destroyed."
    },
    {
      "sr_number": "15",
      "question": "What is content provider?",
      "answer": "Content providers are used to share information between android applications. A content provider manages access to a central repository of data. A provider is part of an Android application, which often provides its own UI for working with the data. However, content providers are primarily intended to be used by other applications, which access the provider using a provider client object. Together, providers and provider clients offer a consistent, standard interface to data that also handles inter-process communication and secure data access."
    },
    {
      "sr_number": "16",
      "question": "Explain about the exceptions of Android?",
      "answer": "The following are the exceptions that are supported by Android\n\n* InflateException :\n\nWhen an error conditions are occurred, this exception is thrown\n\n* Surface.OutOfResourceException:\n\nWhen a surface is not created or resized, this exception is throw\n\n* SurfaceHolder.BadSurfaceTypeException:\n\nThis exception is thrown from the lockCanvas() method, when invoked on a Surface whose is SURFACE_TYPE_PUSH_BUFFERS\n\n* WindowManager.BadTokenException:\n\nThis exception is thrown at the time of trying to add view an invalid WindowManager.LayoutParamstoken."
    },
    {
      "sr_number": "17",
      "question": "What is a Sticky Intent?",
      "answer": "Sticky Intent is also a type of Intent which allows a communication between a function and a service sendStickyBroadcast() performs a sendBroadcast(Intent) known as sticky, i.e. the Intent you are sending stays around after the broadcast is complete, so that others can quickly retrieve that data through the return value of registerReceiver(BroadcastReceiver, IntentFilter). In all other ways, this behaves the same as sendBroadcast(Intent). One example of a sticky broadcast sent via the operating system is ACTION_BATTERY_CHANGED.\n\nWhen you call registerReceiver() for that action -- even with a null BroadcastReceiver -- you get the Intent that was last broadcast for that action. Hence, you can use this to find the state of the battery without necessarily registering for all future state changes in the battery."
    },
    {
      "sr_number": "18",
      "question": "What are fragments in Android Activity?",
      "answer": "Fragment represents a behavior or a portion of user interface in an Activity. And it is a self-contained component with its own UI and lifecycle."
    },
    {
      "sr_number": "19",
      "question": "What is BroadReceivers?",
      "answer": "BroadcastReceiver is a component that does nothing but receive and react to broadcast announcements. For example, the battery is low or that the user changed a language preference."
    },
    {
      "sr_number": "20",
      "question": "How many ways data stored in Android?",
      "answer": "1.SharedPreferences\n2.Internal Storage\n3.External Storage\n4.SQLite Database\n5.Network connection"
    },
    {
      "sr_number": "21",
      "question": "What is View in Android?",
      "answer": "Views are the base class for all visual interface elements(commonly known as controls or widgets).\n\nAll UI controls,including the layout classes,are derived for View."
    },
    {
      "sr_number": "22",
      "question": "What View Group in Android?",
      "answer": "View Groups are extensions of the View class that can contain multiple child View.Extend the ViewGroup class to create compound controls made up of interconnected child Views."
    },
    {
      "sr_number": "23",
      "question": "What is Pending Intent?",
      "answer": "The Pending Intent class provides a mechanism for creating Intents that can be fired by another application at a later time. A pending Intent is commonly used to package an Intent will be fired in response to a future event,such as a widget View being clicked or a Notification being selected from the notification panel."
    },
    {
      "sr_number": "24",
      "question": "What is Adapter?",
      "answer": "Adapter are bridging classes that bind data to Views(such as List Views) used in the user interface.\n\nThe adapter is responsible for creating for creating the child Views used to represent each item within the parent View, and providing access to the underlying data."
    }/*,
    {
      "sr_number": "25",
      "question": "",
      "answer": ""
    },
    {
      "sr_number": "26",
      "question": "?",
      "answer": ""
    },
    {
      "sr_number": "27",
      "question": "",
      "answer": ""
    },
    {
      "sr_number": "28",
      "question": "",
      "answer": ""
    },
    {
      "sr_number": "29",
      "question": "?",
      "answer": ""
    },
    {
      "sr_number": "30",
      "question": "",
      "answer": ""
    },
    {
      "sr_number": "31",
      "question": "",
      "answer": ""
    }*/
  ]
}